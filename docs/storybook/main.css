@charset "UTF-8";
/*------------------------------------*\
    $ACTION BAR
\*------------------------------------*/
/*------------------------------------*\
  $FRAMEWORK
\*------------------------------------*/
/*------------------------------------*\
  $BASE
\*------------------------------------*/
/**
 * Base variables. These are included first as they provide a basis for calculations
 * throughout the framework.
 */
/**
  * Base font-family.
  */
/**
  * Default colour for objects’ borders etc.
  */
/**
 * inuit.css will work these next ones out for use within the framework.
 *
 * Assign our `$base-line-height` to a new spacing var for more transparency.
 */
/**
 * Tell inuit.css when breakpoints start.
 */
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $COLLAPSED ANCHOR
\*------------------------------------*/
/**
 * Media query mixin.
 *
 * It’s not great practice to define solid breakpoints up-front, preferring to
 * modify your design when it needs it, rather than assuming you’ll want a
 * change at ‘mobile’. However, as inuit.css is required to take a hands off
 * approach to design decisions, this is the closest we can get to baked-in
 * responsiveness. It’s flexible enough to allow you to set your own breakpoints
 * but solid enough to be frameworkified.
 *
 * We define some broad breakpoints in our vars file that are picked up here
 * for use in a simple media query mixin. Our options are:
 *
 * palm
 * lap
 * lap-and-up
 * portable
 * desk
 * desk-wide
 *
 * Not using a media query will, naturally, serve styles to all devices.
 *
 * `@include media-query(palm){ [styles here] }`
 *
 * We work out your end points for you:
 */
/*------------------------------------*\
    $LAYOUT
\*------------------------------------*/
/*------------------------------------*\
    $ISLAND MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN AND PADDING
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN
\*------------------------------------*/
/*------------------------------------*\
    $PADDING
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN
\*------------------------------------*/
/*------------------------------------*\
    $PADDING
\*------------------------------------*/
/*------------------------------------*\
    $WRAP MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $LINKS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $COLLAPSED ANCHOR
\*------------------------------------*/
/*------------------------------------*\
    $BASE
\*------------------------------------*/
/*------------------------------------*\
    $LISTS
\*------------------------------------*/
.action-bar {
  transition: opacity 350ms ease-in-out, max-height 350ms ease-in-out;
  border-width: 0;
  max-height: 0;
  opacity: 0;
  overflow: hidden;
  padding-bottom: 0;
  padding-top: 0;
  height: 100%; }
  .action-bar.action-bar--is-open {
    border-width: auto;
    max-height: 100%;
    opacity: 1;
    overflow: visible;
    padding-bottom: 0;
    padding-top: 0;
    max-height: 2em;
    opacity: 1; }

.action-bar__text {
  margin: 0; }

/*------------------------------------*\
    $ASIDE SLIDE
\*------------------------------------*/
.aside-slide {
  transition: -webkit-transform 550ms ease-in-out;
  transition: transform 550ms ease-in-out;
  transition: transform 550ms ease-in-out, -webkit-transform 550ms ease-in-out;
  position: fixed;
  top: 0;
  height: 100%;
  left: 0;
  width: 100%;
  background-color: grey;
  min-width: 960px;
  overflow-x: hidden;
  z-index: 999;
  -webkit-transform: translateX(100%);
          transform: translateX(100%);
  will-change: transform;
  pointer-events: none; }
  .aside-slide .aside-slide {
    background-color: transparent; }
  .aside-slide.aside-slide--bgc-alt > .aside-slide__inner, .aside-slide.aside-slide--bgc-alt > .aside-slide__inner--padded {
    background-color: lightgray; }
  .aside-slide.is-open {
    transition: -webkit-transform 550ms ease-in-out;
    transition: transform 550ms ease-in-out;
    transition: transform 550ms ease-in-out, -webkit-transform 550ms ease-in-out;
    -webkit-transform: none;
            transform: none;
    pointer-events: auto; }
  .aside-slide.is-transparent {
    transition: background-color 0ms;
    background-color: transparent; }

.aside-slide__icon {
  padding: 1em;
  height: 100%;
  display: block; }
  .aside-slide__icon svg {
    width: 2rem;
    height: 2rem; }

.aside-slide__clickable-area {
  width: 40px;
  display: block;
  height: 100%; }
  .aside-slide__clickable-area .aside-slide__clickable-area__button {
    display: block;
    height: 100%;
    width: 100%;
    opacity: 0;
    cursor: pointer; }

.aside-slide__inner, .aside-slide__inner--padded {
  overflow-y: scroll;
  background-color: white;
  width: calc(100% - 40px);
  height: 100%;
  position: absolute;
  right: 0;
  top: 0;
  display: inline-block; }

.aside-slide__inner__header {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
  margin-top: 1rem; }

.aside-slide__inner__header__item, .aside-slide__inner__header__item--lt, .aside-slide__inner__header__item--right {
  margin-right: 1rem; }

.aside-slide__inner__header__item--right {
  position: absolute;
  right: 0; }

.aside-slide__inner__body {
  margin-bottom: 2rem; }

.aside-slide__bar {
  position: fixed;
  bottom: 0;
  left: 40px;
  width: 100%;
  z-index: 99; }

.aside-slide__bar__inner {
  padding: 0.5em; }

@charset "UTF-8";
/*------------------------------------*\
    $BUTTON GROUP
\*------------------------------------*/
/*------------------------------------*\
  $FRAMEWORK
\*------------------------------------*/
/*------------------------------------*\
  $BASE
\*------------------------------------*/
/**
 * Base variables. These are included first as they provide a basis for calculations
 * throughout the framework.
 */
/**
  * Base font-family.
  */
/**
  * Default colour for objects’ borders etc.
  */
/**
 * inuit.css will work these next ones out for use within the framework.
 *
 * Assign our `$base-line-height` to a new spacing var for more transparency.
 */
/**
 * Tell inuit.css when breakpoints start.
 */
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $COLLAPSED ANCHOR
\*------------------------------------*/
/**
 * Media query mixin.
 *
 * It’s not great practice to define solid breakpoints up-front, preferring to
 * modify your design when it needs it, rather than assuming you’ll want a
 * change at ‘mobile’. However, as inuit.css is required to take a hands off
 * approach to design decisions, this is the closest we can get to baked-in
 * responsiveness. It’s flexible enough to allow you to set your own breakpoints
 * but solid enough to be frameworkified.
 *
 * We define some broad breakpoints in our vars file that are picked up here
 * for use in a simple media query mixin. Our options are:
 *
 * palm
 * lap
 * lap-and-up
 * portable
 * desk
 * desk-wide
 *
 * Not using a media query will, naturally, serve styles to all devices.
 *
 * `@include media-query(palm){ [styles here] }`
 *
 * We work out your end points for you:
 */
/*------------------------------------*\
    $LAYOUT
\*------------------------------------*/
/*------------------------------------*\
    $ISLAND MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN AND PADDING
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN
\*------------------------------------*/
/*------------------------------------*\
    $PADDING
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN
\*------------------------------------*/
/*------------------------------------*\
    $PADDING
\*------------------------------------*/
/*------------------------------------*\
    $WRAP MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $LINKS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $COLLAPSED ANCHOR
\*------------------------------------*/
/*------------------------------------*\
    $BASE
\*------------------------------------*/
/*------------------------------------*\
    $LISTS
\*------------------------------------*/
.button-group, .button-group--has-expand {
  position: relative;
  width: 100%;
  min-width: 20rem; }
  .button-group .grouped--left, .button-group--has-expand .grouped--left {
    position: absolute;
    left: 0;
    width: 50%; }
  .button-group .grouped--right, .button-group--has-expand .grouped--right {
    position: absolute;
    left: 50%;
    width: 50%; }

.button-group__primary {
  display: inline-block;
  min-width: 16rem;
  text-align: right; }

.button-group__primary__item {
  margin-right: 2px;
  display: inline-block; }
  .button-group__primary__item.button-group__item--is-first > .button-group__primary__item__btn {
    border-radius: 5px 0 0 5px; }
  .button-group__primary__item.button-group__item--is-only > .button-group__primary__item__btn {
    border-radius: 5px 5px 5px 5px !important; }
  .button-group__primary__item .button-group__primary__item__btn {
    border-radius: 0; }
  .button-group__primary__item:nth-last-child(1) > .button-group__primary__item__btn {
    border-radius: 0 5px 5px 0px; }
    .button-group--has-expand .button-group__primary__item:nth-last-child(1) > .button-group__primary__item__btn {
      border-radius: 0 !important; }

.button-group__primary__item__btn {
  display: block;
  width: 100%; }

.button-group__primary__item__btn--text {
  display: block;
  width: 100%; }

.button-group__secondary--is-closed, .button-group__secondary--is-open {
  position: relative;
  display: inline-block;
  vertical-align: bottom; }

.button-group__secondary-toggle {
  height: 100%;
  width: 2rem; }

.button-group__secondary-toggle__btn, .button-group--alt .button-group__secondary-toggle__btn {
  border-radius: 0 5px 5px 0;
  width: 100%;
  height: 100%;
  position: relative;
  display: block;
  min-width: 0px;
  padding-left: 0;
  padding-right: 0; }

.button-group__secondary-toggle__btn .icon__inner > svg {
  height: 1.5em;
  width: 1.5em; }

.button-group__secondary-collapsed {
  transition: opacity 350ms ease-in-out, max-height 350ms ease-in-out;
  border-width: 0;
  max-height: 0;
  opacity: 0;
  overflow: hidden;
  padding-bottom: 0;
  padding-top: 0;
  box-shadow: 0px 0px 10px black;
  background-color: lightgray;
  position: absolute;
  z-index: 9;
  transition: all 350ms ease-in-out;
  width: 15rem;
  right: 0;
  left: auto;
  left: initial;
  top: 75%;
  min-width: 5rem;
  background-color: lightgrey; }
  .button-group--alt .button-group__secondary-collapsed {
    top: auto;
    bottom: 100%; }

.button-group__secondary-collapsed:before {
  content: '';
  border-bottom: 10px solid black;
  border-left: 7px solid transparent;
  border-right: 7px solid transparent;
  height: 0;
  right: 0.55rem;
  position: absolute;
  top: -10px;
  width: 0; }
  .button-group--alt .button-group__secondary-collapsed:before {
    top: auto;
    bottom: -10px;
    border-bottom: transparent;
    border-top: 10px solid black;
    border-left: 7px solid transparent;
    border-right: 7px solid transparent; }

.button-group__secondary--is-open .button-group__secondary-collapsed {
  max-height: 20rem;
  opacity: 1;
  overflow: visible; }

.button-group__secondary__item {
  display: block;
  text-align: right; }

.button-group__secondary__item__btn {
  display: block;
  text-align: right;
  width: 100%;
  text-overflow: ellipsis;
  overflow: hidden; }

@charset "UTF-8";
/*------------------------------------*\
    $DROP OPTIONS
\*------------------------------------*/
/*------------------------------------*\
  $FRAMEWORK
\*------------------------------------*/
/*------------------------------------*\
  $BASE
\*------------------------------------*/
/**
 * Base variables. These are included first as they provide a basis for calculations
 * throughout the framework.
 */
/**
  * Base font-family.
  */
/**
  * Default colour for objects’ borders etc.
  */
/**
 * inuit.css will work these next ones out for use within the framework.
 *
 * Assign our `$base-line-height` to a new spacing var for more transparency.
 */
/**
 * Tell inuit.css when breakpoints start.
 */
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $COLLAPSED ANCHOR
\*------------------------------------*/
/**
 * Media query mixin.
 *
 * It’s not great practice to define solid breakpoints up-front, preferring to
 * modify your design when it needs it, rather than assuming you’ll want a
 * change at ‘mobile’. However, as inuit.css is required to take a hands off
 * approach to design decisions, this is the closest we can get to baked-in
 * responsiveness. It’s flexible enough to allow you to set your own breakpoints
 * but solid enough to be frameworkified.
 *
 * We define some broad breakpoints in our vars file that are picked up here
 * for use in a simple media query mixin. Our options are:
 *
 * palm
 * lap
 * lap-and-up
 * portable
 * desk
 * desk-wide
 *
 * Not using a media query will, naturally, serve styles to all devices.
 *
 * `@include media-query(palm){ [styles here] }`
 *
 * We work out your end points for you:
 */
/*------------------------------------*\
    $LAYOUT
\*------------------------------------*/
/*------------------------------------*\
    $ISLAND MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN AND PADDING
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN
\*------------------------------------*/
/*------------------------------------*\
    $PADDING
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN
\*------------------------------------*/
/*------------------------------------*\
    $PADDING
\*------------------------------------*/
/*------------------------------------*\
    $WRAP MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $LINKS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $COLLAPSED ANCHOR
\*------------------------------------*/
/*------------------------------------*\
    $BASE
\*------------------------------------*/
/*------------------------------------*\
    $LISTS
\*------------------------------------*/
.drop-options-container {
  display: flex;
  flex-flow: row nowrap;
  height: 100%;
  justify-content: flex-end;
  position: relative;
  text-align: right;
  min-width: 15rem; }

.drop-options {
  position: relative;
  text-align: right;
  height: 100%;
  flex-basis: 15rem; }

.drop-options__base {
  display: flex;
  flex-flow: column nowrap;
  justify-content: stretch;
  height: 100%; }

.drop-options__base__btn {
  display: block;
  background-color: white;
  width: 100%;
  height: 100%; }
  .drop-options__base__btn:hover {
    background-color: lightgray; }

.drop-options__options {
  transition: all 350ms ease-in-out;
  color: black;
  position: absolute;
  top: 105%;
  right: 0;
  width: 100%;
  z-index: 999;
  box-shadow: 0px 0px 10px black;
  background-color: lightgray;
  transition: opacity 350ms ease-in-out, max-height 350ms ease-in-out;
  border-width: 0;
  max-height: 0;
  opacity: 0;
  overflow: hidden;
  padding-bottom: 0;
  padding-top: 0; }
  .drop-options__options:before {
    content: '';
    border-bottom: 10px solid grey;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    height: 0;
    left: 1.5rem;
    position: absolute;
    top: -10px;
    -webkit-transform: translateX(-50%);
            transform: translateX(-50%);
    width: 0; }
  .drop-options__options.drop-options__options--is-open {
    opacity: 1;
    max-height: 20rem;
    overflow: visible; }

.drop-options__options__item {
  display: flex;
  flex-flow: row nowrap;
  justify-content: stretch;
  align-items: center;
  border-bottom: 1px solid black;
  min-height: 3rem; }
  .drop-options__options__item:last-child {
    border-bottom: none; }
  .drop-options__options__item > .drop-options__options__item__default {
    width: 100%;
    height: 100%;
    text-align: right;
    color: black;
    background-color: transparent;
    cursor: pointer; }
    .drop-options__options__item > .drop-options__options__item__default:hover {
      background-color: lightgray; }

@charset "UTF-8";
/*------------------------------------*\
  $FRAMEWORK
\*------------------------------------*/
/*------------------------------------*\
  $BASE
\*------------------------------------*/
/**
 * Base variables. These are included first as they provide a basis for calculations
 * throughout the framework.
 */
/**
  * Base font-family.
  */
/**
  * Default colour for objects’ borders etc.
  */
/**
 * inuit.css will work these next ones out for use within the framework.
 *
 * Assign our `$base-line-height` to a new spacing var for more transparency.
 */
/**
 * Tell inuit.css when breakpoints start.
 */
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $COLLAPSED ANCHOR
\*------------------------------------*/
/**
 * Media query mixin.
 *
 * It’s not great practice to define solid breakpoints up-front, preferring to
 * modify your design when it needs it, rather than assuming you’ll want a
 * change at ‘mobile’. However, as inuit.css is required to take a hands off
 * approach to design decisions, this is the closest we can get to baked-in
 * responsiveness. It’s flexible enough to allow you to set your own breakpoints
 * but solid enough to be frameworkified.
 *
 * We define some broad breakpoints in our vars file that are picked up here
 * for use in a simple media query mixin. Our options are:
 *
 * palm
 * lap
 * lap-and-up
 * portable
 * desk
 * desk-wide
 *
 * Not using a media query will, naturally, serve styles to all devices.
 *
 * `@include media-query(palm){ [styles here] }`
 *
 * We work out your end points for you:
 */
/*------------------------------------*\
    $LAYOUT
\*------------------------------------*/
/*------------------------------------*\
    $ISLAND MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN AND PADDING
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN
\*------------------------------------*/
/*------------------------------------*\
    $PADDING
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN
\*------------------------------------*/
/*------------------------------------*\
    $PADDING
\*------------------------------------*/
/*------------------------------------*\
    $WRAP MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $LINKS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $COLLAPSED ANCHOR
\*------------------------------------*/
/*------------------------------------*\
    $BASE
\*------------------------------------*/
/*------------------------------------*\
    $LISTS
\*------------------------------------*/
.document-uploader {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between; }

.document-uploader__item {
  display: flex;
  width: 200px;
  margin-right: px-to-rem(18px); }

.document-uploader__item--full-width {
  width: 100%; }

/*------------------------------------*\
    $LOADERS
\*------------------------------------*/
.loader {
  justify-content: center;
  display: flex; }
  .loader__ellipsis, .loader__ellipsis--action-loading {
    display: inline-block;
    position: relative;
    width: 64px;
    height: 64px; }
    .loader__ellipsis__dot, .loader__ellipsis--action-loading__dot {
      position: absolute;
      top: 27px;
      width: 11px;
      height: 11px;
      border-radius: 50%;
      background: #af1e2d;
      -webkit-animation-timing-function: cubic-bezier(0, 1, 1, 0);
              animation-timing-function: cubic-bezier(0, 1, 1, 0); }
    .loader__ellipsis__dot:nth-child(1), .loader__ellipsis--action-loading__dot:nth-child(1) {
      left: 6px;
      -webkit-animation: ellipsis1 0.6s infinite;
              animation: ellipsis1 0.6s infinite; }
    .loader__ellipsis__dot:nth-child(2), .loader__ellipsis--action-loading__dot:nth-child(2) {
      left: 6px;
      -webkit-animation: ellipsis2 0.6s infinite;
              animation: ellipsis2 0.6s infinite; }
    .loader__ellipsis__dot:nth-child(3), .loader__ellipsis--action-loading__dot:nth-child(3) {
      left: 26px;
      -webkit-animation: ellipsis2 0.6s infinite;
              animation: ellipsis2 0.6s infinite; }
    .loader__ellipsis__dot:nth-child(4), .loader__ellipsis--action-loading__dot:nth-child(4) {
      left: 45px;
      -webkit-animation: ellipsis3 0.6s infinite;
              animation: ellipsis3 0.6s infinite; }
  .loader__ellipsis--action-loading {
    height: 20px; }
    .loader__ellipsis--action-loading__dot {
      top: 7px;
      width: 5.5px;
      height: 5.5px; }

@-webkit-keyframes ellipsis1 {
  0% {
    -webkit-transform: scale(0);
            transform: scale(0); }
  100% {
    -webkit-transform: scale(1);
            transform: scale(1); } }

@keyframes ellipsis1 {
  0% {
    -webkit-transform: scale(0);
            transform: scale(0); }
  100% {
    -webkit-transform: scale(1);
            transform: scale(1); } }

@-webkit-keyframes ellipsis3 {
  0% {
    -webkit-transform: scale(1);
            transform: scale(1); }
  100% {
    -webkit-transform: scale(0);
            transform: scale(0); } }

@keyframes ellipsis3 {
  0% {
    -webkit-transform: scale(1);
            transform: scale(1); }
  100% {
    -webkit-transform: scale(0);
            transform: scale(0); } }

@-webkit-keyframes ellipsis2 {
  0% {
    -webkit-transform: translate(0, 0);
            transform: translate(0, 0); }
  100% {
    -webkit-transform: translate(19px, 0);
            transform: translate(19px, 0); } }

@keyframes ellipsis2 {
  0% {
    -webkit-transform: translate(0, 0);
            transform: translate(0, 0); }
  100% {
    -webkit-transform: translate(19px, 0);
            transform: translate(19px, 0); } }

@charset "UTF-8";
/*------------------------------------*\
  $FRAMEWORK
\*------------------------------------*/
/*------------------------------------*\
  $BASE
\*------------------------------------*/
/**
 * Base variables. These are included first as they provide a basis for calculations
 * throughout the framework.
 */
/**
  * Base font-family.
  */
/**
  * Default colour for objects’ borders etc.
  */
/**
 * inuit.css will work these next ones out for use within the framework.
 *
 * Assign our `$base-line-height` to a new spacing var for more transparency.
 */
/**
 * Tell inuit.css when breakpoints start.
 */
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $COLLAPSED ANCHOR
\*------------------------------------*/
/**
 * Media query mixin.
 *
 * It’s not great practice to define solid breakpoints up-front, preferring to
 * modify your design when it needs it, rather than assuming you’ll want a
 * change at ‘mobile’. However, as inuit.css is required to take a hands off
 * approach to design decisions, this is the closest we can get to baked-in
 * responsiveness. It’s flexible enough to allow you to set your own breakpoints
 * but solid enough to be frameworkified.
 *
 * We define some broad breakpoints in our vars file that are picked up here
 * for use in a simple media query mixin. Our options are:
 *
 * palm
 * lap
 * lap-and-up
 * portable
 * desk
 * desk-wide
 *
 * Not using a media query will, naturally, serve styles to all devices.
 *
 * `@include media-query(palm){ [styles here] }`
 *
 * We work out your end points for you:
 */
/*------------------------------------*\
    $LAYOUT
\*------------------------------------*/
/*------------------------------------*\
    $ISLAND MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN AND PADDING
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN
\*------------------------------------*/
/*------------------------------------*\
    $PADDING
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN
\*------------------------------------*/
/*------------------------------------*\
    $PADDING
\*------------------------------------*/
/*------------------------------------*\
    $WRAP MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $LINKS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $COLLAPSED ANCHOR
\*------------------------------------*/
/*------------------------------------*\
    $BASE
\*------------------------------------*/
/*------------------------------------*\
    $LISTS
\*------------------------------------*/
.react-selectize.root-node {
  position: relative;
  width: 300px; }

.react-selectize.root-node.disabled {
  pointer-events: none; }

.react-selectize.root-node.disabled .react-selectize-control .react-selectize-search-field-and-selected-values {
  min-height: 0; }

.react-selectize.root-node .react-selectize-control {
  cursor: pointer;
  display: flex;
  align-items: flex-start;
  position: relative;
  padding: 2px; }

.react-selectize.root-node .react-selectize-control .react-selectize-placeholder {
  display: block;
  line-height: 30px;
  overflow: hidden;
  text-overflow: ellipsis;
  vertical-align: middle;
  white-space: pre-wrap;
  position: absolute;
  max-width: calc(100% - 56px); }

.react-selectize.root-node .react-selectize-control .react-selectize-search-field-and-selected-values {
  display: flex;
  min-height: 30px;
  box-flex: 1;
  flex-grow: 1;
  flex-wrap: wrap;
  flex-flow: row nowrap;
  white-space: pre-wrap; }

.react-selectize.root-node .react-selectize-control .react-selectize-search-field-and-selected-values .resizable-input {
  background: none;
  border: none;
  outline: none;
  font-size: 1em;
  margin: 2px;
  padding: 4px 0px;
  vertical-align: middle;
  width: 0px; }

.react-selectize.root-node .react-selectize-control .react-selectize-search-field-and-selected-values .value-wrapper {
  display: flex;
  align-items: center; }

.react-selectize.root-node .react-selectize-control .react-selectize-reset-button-container,
.react-selectize.root-node .react-selectize-control .react-selectize-toggle-button-container {
  flex-grow: 0;
  flex-shrink: 0;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 30px; }

.react-selectize.root-node .react-selectize-control .react-selectize-reset-button-container {
  width: 16px; }

.react-selectize.root-node .react-selectize-control .react-selectize-toggle-button-container {
  width: 32px; }

.react-selectize.root-node .react-selectize-control .react-selectize-reset-button-container:hover .react-selectize-reset-button path {
  stroke: red; }

.react-selectize.root-node .react-selectize-control .react-selectize-reset-button path {
  transition: stroke 0.5s 0s ease;
  stroke: #999;
  stroke-linecap: square;
  stroke-linejoin: miter; }

.react-selectize.root-node .react-selectize-control .react-selectize-toggle-button path {
  fill: #999; }

.react-selectize.dropdown-menu-wrapper {
  position: absolute; }

.react-selectize.dropdown-menu-wrapper.tethered {
  min-width: 300px; }

.react-selectize.dropdown-menu-wrapper:not(.tethered) {
  width: 100%; }

.react-selectize.dropdown-menu {
  box-sizing: border-box;
  overflow: auto;
  position: absolute;
  max-height: 200px;
  z-index: 10; }

.react-selectize.dropdown-menu.tethered {
  min-width: 300px; }

.react-selectize.dropdown-menu:not(.tethered) {
  width: 100%; }

.react-selectize.dropdown-menu .groups.as-columns {
  display: flex; }

.react-selectize.dropdown-menu .groups.as-columns > div {
  box-flex: 1;
  flex: 1 1; }

.react-selectize.dropdown-menu .option-wrapper {
  cursor: pointer;
  outline: none; }

.multi-select.react-selectize.root-node .simple-value {
  display: inline-block;
  margin: 2px;
  vertical-align: middle; }

.multi-select.react-selectize.root-node .simple-value span {
  display: inline-block;
  padding: 2px 5px 4px;
  vertical-align: center; }

.simple-select.react-selectize.root-node .simple-value {
  margin: 2px; }

.simple-select.react-selectize.root-node .simple-value span {
  display: inline-block;
  vertical-align: center; }

.react-selectize.default.root-node .react-selectize-control {
  background-color: #fff;
  border: 1px solid grey;
  font-size: 2rem; }

.react-selectize.default.root-node .react-selectize-control .react-selectize-placeholder {
  color: #aaa;
  text-indent: 8px; }

.react-selectize.default.root-node .react-selectize-control .react-selectize-search-field-and-selected-values {
  padding-left: 5px; }

.react-selectize.default.root-node.open.flipped .react-selectize-control {
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px;
  border-top-left-radius: 0px;
  border-top-right-radius: 0px; }

.react-selectize.default.root-node.open:not(.flipped) .react-selectize-control {
  border-bottom-left-radius: 0px;
  border-bottom-right-radius: 0px;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px; }

.react-selectize.dropdown-menu-wrapper.default {
  overflow: hidden; }

.react-selectize.dropdown-menu-wrapper.default .dropdown-menu.custom-enter-active,
.react-selectize.dropdown-menu-wrapper.default .dropdown-menu.custom-leave-active {
  transition: -webkit-transform 0.2s 0s ease;
  transition: transform 0.2s 0s ease;
  transition: transform 0.2s 0s ease, -webkit-transform 0.2s 0s ease; }

.react-selectize.dropdown-menu-wrapper.default .dropdown-menu.flipped.custom-enter {
  -webkit-transform: translateY(100%);
          transform: translateY(100%); }

.react-selectize.dropdown-menu-wrapper.default .dropdown-menu.flipped.custom-enter-active {
  -webkit-transform: translateY(0%);
          transform: translateY(0%); }

.react-selectize.dropdown-menu-wrapper.default .dropdown-menu.flipped.custom-leave {
  -webkit-transform: translateY(0%);
          transform: translateY(0%); }

.react-selectize.dropdown-menu-wrapper.default .dropdown-menu.flipped.custom-leave-active {
  -webkit-transform: translateY(100%);
          transform: translateY(100%); }

.react-selectize.dropdown-menu-wrapper.default .dropdown-menu:not(.flipped).custom-enter {
  -webkit-transform: translateY(-100%);
          transform: translateY(-100%); }

.react-selectize.dropdown-menu-wrapper.default .dropdown-menu:not(.flipped).custom-enter-active {
  -webkit-transform: translateY(0%);
          transform: translateY(0%); }

.react-selectize.dropdown-menu-wrapper.default .dropdown-menu:not(.flipped).custom-leave {
  -webkit-transform: translateY(0%);
          transform: translateY(0%); }

.react-selectize.dropdown-menu-wrapper.default .dropdown-menu:not(.flipped).custom-leave-active {
  -webkit-transform: translateY(-100%);
          transform: translateY(-100%); }

.react-selectize.dropdown-menu.default {
  background: #fff;
  border: 1px solid #ccc;
  margin-top: -1px; }

.react-selectize.dropdown-menu.default.flipped {
  border-top-left-radius: 4px;
  border-top-right-radius: 4px; }

.react-selectize.dropdown-menu.default:not(.flipped) {
  border-color: #b3b3b3 #ccc #d9d9d9;
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px; }

.react-selectize.dropdown-menu.default .no-results-found {
  color: #aaa !important;
  font-style: oblique;
  padding: 8px 10px; }

.react-selectize.dropdown-menu.default .simple-group-title {
  background-color: #fafafa;
  padding: 8px 8px; }

.react-selectize.dropdown-menu.default .option-wrapper.highlight {
  background: #f2f9fc;
  color: #333; }

.react-selectize.dropdown-menu.default .option-wrapper .simple-option {
  color: #666;
  cursor: pointer;
  padding: 8px 10px; }

.react-selectize.dropdown-menu.default .option-wrapper .simple-option.not-selectable {
  background-color: #f8f8f8;
  color: #999;
  cursor: default;
  font-style: oblique;
  text-shadow: 0px 1px 0px #fff; }

.multi-select.react-selectize.default.root-node .simple-value {
  background: #f2f9fc;
  border: 1px solid #c9e6f2;
  border-radius: 2px;
  color: #08c; }

.simple-select.react-selectize.default.root-node.open .react-selectize-control {
  background-color: #fff; }

.form__input-container--group-error .react-selectize-control {
  background-color: pink !important;
  border: 1px solid pink !important; }

.react-selectize.bootstrap3.root-node.open .react-selectize-control {
  background-color: #fff;
  border: 1px solid #66afe9;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6); }

.react-selectize.bootstrap3.root-node .react-selectize-control {
  border: 1px solid;
  border-color: #d9d9d9 #ccc #b3b3b3;
  border-radius: 4px;
  font-size: 1em; }

.react-selectize.bootstrap3.root-node .react-selectize-control .react-selectize-placeholder {
  color: #aaa;
  text-indent: 8px; }

.react-selectize.bootstrap3.root-node .react-selectize-control .react-selectize-search-field-and-selected-values {
  padding-left: 5px; }

.react-selectize.bootstrap3.dropdown-menu-wrapper.flipped {
  margin-bottom: 5px; }

.react-selectize.bootstrap3.dropdown-menu-wrapper:not(.flipped) {
  margin-top: 5px; }

.react-selectize.bootstrap3.dropdown-menu-wrapper .dropdown-menu.custom-enter-active,
.react-selectize.bootstrap3.dropdown-menu-wrapper .dropdown-menu.custom-leave-active {
  transition: opacity 0.2s 0s ease; }

.react-selectize.bootstrap3.dropdown-menu-wrapper .dropdown-menu.custom-enter {
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0); }

.react-selectize.bootstrap3.dropdown-menu-wrapper .dropdown-menu.custom-enter-active {
  opacity: 1;
  -ms-filter: none;
  -webkit-filter: none;
          filter: none; }

.react-selectize.bootstrap3.dropdown-menu-wrapper .dropdown-menu.custom-leave {
  opacity: 1;
  -ms-filter: none;
  -webkit-filter: none;
          filter: none; }

.react-selectize.bootstrap3.dropdown-menu-wrapper .dropdown-menu.custom-leave-active {
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0); }

.react-selectize.bootstrap3.dropdown-menu {
  background: #fff;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175); }

.react-selectize.bootstrap3.dropdown-menu.flipped {
  margin-bottom: 5px; }

.react-selectize.bootstrap3.dropdown-menu:not(.flipped) {
  margin-top: 5px; }

.react-selectize.bootstrap3.dropdown-menu .no-results-found {
  color: #aaa !important;
  font-style: oblique;
  padding: 8px 10px; }

.react-selectize.bootstrap3.dropdown-menu .groups:not(.as-columns) > div:not(:first-child) {
  border-top: 1px solid #e5e5e5;
  margin: 12px 0px 0px 0px; }

.react-selectize.bootstrap3.dropdown-menu .simple-group-title {
  background-color: #fff;
  color: #999;
  padding: 8px 8px;
  text-shadow: 0px 1px 0px rgba(0, 0, 0, 0.05); }

.react-selectize.bootstrap3.dropdown-menu .option-wrapper.highlight {
  background: #428bca; }

.react-selectize.bootstrap3.dropdown-menu .option-wrapper.highlight .simple-option {
  color: #fff; }

.react-selectize.bootstrap3.dropdown-menu .option-wrapper .simple-option {
  color: #333;
  cursor: pointer;
  padding: 8px 10px; }

.react-selectize.bootstrap3.dropdown-menu .option-wrapper .simple-option.not-selectable {
  background-color: #f8f8f8;
  color: #999;
  cursor: default;
  font-style: oblique;
  text-shadow: 0px 1px 0px #fff; }

.multi-select.react-selectize.bootstrap3.root-node .simple-value {
  background: #efefef;
  border-radius: 4px;
  color: #333; }

.react-selectize.material.root-node.open .react-selectize-control:after {
  -webkit-transform: scaleX(1);
          transform: scaleX(1); }

.react-selectize.material.root-node .react-selectize-control {
  border-bottom: 1px solid rgba(0, 0, 0, 0.3); }

.react-selectize.material.root-node .react-selectize-control:after {
  background-color: #00bcd4;
  content: "";
  -webkit-transform: scaleX(0);
          transform: scaleX(0);
  transition: -webkit-transform 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;
  transition: transform 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;
  transition: transform 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, -webkit-transform 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;
  position: absolute;
  left: 0px;
  bottom: -1px;
  width: 100%;
  height: 2px; }

.react-selectize.material.root-node .react-selectize-control .react-selectize-placeholder {
  color: rgba(0, 0, 0, 0.3);
  text-indent: 4px; }

.react-selectize.material.dropdown-menu-wrapper.flipped {
  margin-bottom: 8px; }

.react-selectize.material.dropdown-menu-wrapper.flipped .dropdown-menu {
  -webkit-transform-origin: 100% 100%;
          transform-origin: 100% 100%; }

.react-selectize.material.dropdown-menu-wrapper:not(.flipped) {
  margin-top: 8px; }

.react-selectize.material.dropdown-menu-wrapper:not(.flipped) .dropdown-menu {
  -webkit-transform-origin: 0% 0%;
          transform-origin: 0% 0%; }

.react-selectize.material.dropdown-menu-wrapper .dropdown-menu.custom-enter-active,
.react-selectize.material.dropdown-menu-wrapper .dropdown-menu.custom-leave-active {
  transition: opacity 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, -webkit-transform 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;
  transition: transform 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, opacity 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;
  transition: transform 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, opacity 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, -webkit-transform 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms; }

.react-selectize.material.dropdown-menu-wrapper .dropdown-menu.custom-enter {
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
  -webkit-transform: scale(0, 0);
          transform: scale(0, 0); }

.react-selectize.material.dropdown-menu-wrapper .dropdown-menu.custom-enter-active {
  opacity: 1;
  -ms-filter: none;
  -webkit-filter: none;
          filter: none;
  -webkit-transform: scale(1, 1);
          transform: scale(1, 1); }

.react-selectize.material.dropdown-menu-wrapper .dropdown-menu.custom-leave {
  opacity: 1;
  -ms-filter: none;
  -webkit-filter: none;
          filter: none;
  -webkit-transform: scale(1, 1);
          transform: scale(1, 1); }

.react-selectize.material.dropdown-menu-wrapper .dropdown-menu.custom-leave-active {
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0); }

.react-selectize.material.dropdown-menu {
  background-color: #fff;
  border-radius: 2px;
  box-shadow: rgba(0, 0, 0, 0.118) 0px 1px 6px, rgba(0, 0, 0, 0.118) 0px 1px 4px;
  max-height: 250px;
  padding: 8px 0px; }

.react-selectize.material.dropdown-menu.flipped {
  margin-bottom: 8px; }

.react-selectize.material.dropdown-menu:not(.flipped) {
  margin-top: 8px; }

.react-selectize.material.dropdown-menu .no-results-found {
  font-style: oblique;
  font-size: 16px;
  height: 32px;
  padding: 0px 16px;
  display: flex;
  align-items: center; }

.react-selectize.material.dropdown-menu .groups:not(.as-columns) > div:not(:last-child) {
  border-bottom: 1px solid #e5e5e5; }

.react-selectize.material.dropdown-menu .simple-group-title {
  color: #8f8f8f;
  display: flex;
  align-items: center;
  font-size: 14px;
  height: 48px;
  padding: 0px 10px; }

.react-selectize.material.dropdown-menu .option-wrapper.highlight {
  background-color: rgba(0, 0, 0, 0.098); }

.react-selectize.material.dropdown-menu .option-wrapper .simple-option {
  color: rgba(0, 0, 0, 0.875);
  cursor: pointer;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  font-size: 16px;
  height: 48px;
  padding: 0px 16px; }

.react-selectize.material.dropdown-menu .option-wrapper .simple-option.not-selectable {
  background-color: #f8f8f8;
  color: #999;
  cursor: default;
  font-style: oblique;
  text-shadow: 0px 1px 0px #fff; }

.multi-select.react-selectize.material.root-node .simple-value span {
  padding: 0px; }

.multi-select.react-selectize.material.root-node .simple-value span:after {
  content: ","; }

.simple-select.react-selectize.material.root-node .simple-value {
  margin: 4px 3px 3px 2px; }

@charset "UTF-8";
/*------------------------------------*\
    $SIMPLE LIST
\*------------------------------------*/
/*------------------------------------*\
  $FRAMEWORK
\*------------------------------------*/
/*------------------------------------*\
  $BASE
\*------------------------------------*/
/**
 * Base variables. These are included first as they provide a basis for calculations
 * throughout the framework.
 */
/**
  * Base font-family.
  */
/**
  * Default colour for objects’ borders etc.
  */
/**
 * inuit.css will work these next ones out for use within the framework.
 *
 * Assign our `$base-line-height` to a new spacing var for more transparency.
 */
/**
 * Tell inuit.css when breakpoints start.
 */
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $COLLAPSED ANCHOR
\*------------------------------------*/
/**
 * Media query mixin.
 *
 * It’s not great practice to define solid breakpoints up-front, preferring to
 * modify your design when it needs it, rather than assuming you’ll want a
 * change at ‘mobile’. However, as inuit.css is required to take a hands off
 * approach to design decisions, this is the closest we can get to baked-in
 * responsiveness. It’s flexible enough to allow you to set your own breakpoints
 * but solid enough to be frameworkified.
 *
 * We define some broad breakpoints in our vars file that are picked up here
 * for use in a simple media query mixin. Our options are:
 *
 * palm
 * lap
 * lap-and-up
 * portable
 * desk
 * desk-wide
 *
 * Not using a media query will, naturally, serve styles to all devices.
 *
 * `@include media-query(palm){ [styles here] }`
 *
 * We work out your end points for you:
 */
/*------------------------------------*\
    $LAYOUT
\*------------------------------------*/
/*------------------------------------*\
    $ISLAND MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN AND PADDING
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN
\*------------------------------------*/
/*------------------------------------*\
    $PADDING
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN
\*------------------------------------*/
/*------------------------------------*\
    $PADDING
\*------------------------------------*/
/*------------------------------------*\
    $WRAP MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $LINKS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $COLLAPSED ANCHOR
\*------------------------------------*/
/*------------------------------------*\
    $BASE
\*------------------------------------*/
/*------------------------------------*\
    $LISTS
\*------------------------------------*/
.list-filter {
  display: flex;
  flex-flow: row nowrap; }

.list-filter__title {
  font-weight: 200;
  color: darkgrey; }

.list-filter__item, .list-filter__item__container__input {
  display: block; }

.list-filter__item {
  flex-basis: 25%; }
  .list-filter__item > .simple-select {
    width: 100%; }

.list-filter__item__input .DateInput {
  width: 40%; }
  .list-filter__item__input .DateInput > input {
    width: 100%; }

.list-filter__item__container {
  display: flex;
  flex-flow: column; }
  .list-filter__item__container .form__label--small {
    display: flex; }

.list-filter__item__container__input {
  position: relative;
  display: flex;
  flex-flow: row nowrap;
  align-items: center; }

.list-filter__item__container__input__appendage {
  width: 1.2rem;
  height: 1.2rem;
  position: absolute;
  right: 2.5rem;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  line-height: 1; }

.list-filter__item__container__input__suffix {
  width: 30px;
  height: 30px;
  display: block;
  display: flex;
  align-items: center;
  justify-content: center; }

.list-filter__item--predefined {
  display: flex;
  flex-direction: column;
  position: relative;
  align-self: flex-end; }
  .list-filter__item--predefined.is-open .list-filter__item__filter-collapsable {
    max-height: 50rem;
    opacity: 1;
    overflow: visible; }

.list-filter__item__filter-btn-container {
  width: 100%; }

.list-filter__item__filter-btn {
  padding: 1em;
  min-width: auto;
  width: 1em; }

.list-filter__item__filter-collapsable {
  max-height: 0;
  opacity: 0;
  overflow: hidden;
  position: absolute;
  top: 100%;
  z-index: 9;
  background-color: white;
  box-shadow: 0px 0px 10px lightgrey;
  transition: all 350ms ease-in-out; }
  .list-filter__item__filter-collapsable:before {
    content: '';
    border-bottom: 10px solid white;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    height: 0;
    left: 7%;
    position: absolute;
    top: -10px;
    -webkit-transform: translateX(-50%);
            transform: translateX(-50%);
    width: 0; }

/*------------------------------------*\
    $DATEPICKER for "react-dates"
\*------------------------------------*/
.CalendarDay__default:hover {
  background: black;
  color: white; }

.SingleDatePicker {
  position: relative; }

.SingleDatePicker_picker {
  z-index: 1;
  background-color: white;
  position: absolute;
  box-shadow: 0px 0px 10px grey; }

.SingleDatePicker_picker__rtl {
  direction: rtl; }

.SingleDatePicker_picker__directionLeft {
  left: 0; }

.SingleDatePicker_picker__directionRight {
  right: 0; }

.SingleDatePicker_picker__openDown {
  top: 40px; }

.SingleDatePicker_picker__openUp {
  bottom: 40px; }

.SingleDatePicker_picker__portal {
  background-color: rgba(0, 0, 0, 0.3);
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%; }

.SingleDatePicker_picker__fullScreenPortal {
  background-color: white; }

.SingleDatePicker_closeButton {
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  cursor: pointer;
  position: absolute;
  top: 0;
  right: 0;
  padding: 15px;
  z-index: 2; }

.SingleDatePicker_closeButton:focus,
.SingleDatePicker_closeButton:hover {
  color: #b0b3b4;
  text-decoration: none; }

.SingleDatePicker_closeButton_svg {
  height: 15px;
  width: 15px;
  fill: #cacccd; }

.SingleDatePickerInput {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: space-between;
  background-color: white;
  border: 1px solid #dbdbdb; }
  .SingleDatePickerInput.SingleDatePickerInput__disabled {
    border: 0px; }
    .SingleDatePickerInput.SingleDatePickerInput__disabled .DateInput_input__disabled {
      padding: 0; }

.SingleDatePickerInput__rtl {
  direction: rtl; }

.SingleDatePickerInput__disabled .SingleDatePickerInput_clearDate {
  display: none; }

.SingleDatePickerInput_clearDate {
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  cursor: pointer;
  display: inline-block;
  vertical-align: middle; }

.SingleDatePickerInput_clearDate:focus:hover .SingleDatePickerInput_clearDate_svg,
.SingleDatePickerInput_clearDate:hover:hover .SingleDatePickerInput_clearDate_svg {
  stroke: red; }

.SingleDatePickerInput_clearDate__hide {
  visibility: hidden; }

.SingleDatePickerInput_clearDate_svg {
  fill: #82888a;
  height: 8px;
  width: 8px;
  vertical-align: middle;
  transition: stroke 0.5s 0s ease;
  stroke: transparent;
  stroke-linecap: square;
  stroke-linejoin: miter; }

.SingleDatePickerInput_calendarIcon {
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  cursor: pointer;
  display: inline-block;
  vertical-align: middle;
  padding: 10px;
  margin: 0 5px 0 10px; }

.SingleDatePickerInput_calendarIcon_svg {
  fill: #82888a;
  height: 15px;
  width: 14px;
  vertical-align: middle; }

.DateRangePicker {
  position: relative;
  display: inline-block; }

.DateRangePicker_picker {
  z-index: 1;
  background-color: white;
  position: absolute;
  box-shadow: 0px 0px 10px grey; }

.DateRangePicker_picker__rtl {
  direction: rtl; }

.DateRangePicker_picker__directionLeft {
  left: 0; }

.DateRangePicker_picker__directionRight {
  right: 0; }

.DateRangePicker_picker__openDown {
  top: 40px; }

.DateRangePicker_picker__openUp {
  bottom: 40px; }

.DateRangePicker_picker__portal {
  background-color: rgba(0, 0, 0, 0.3);
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%; }

.DateRangePicker_picker__fullScreenPortal {
  background-color: white; }

.DateRangePicker_closeButton {
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  cursor: pointer;
  position: absolute;
  top: 0;
  right: 0;
  padding: 15px;
  z-index: 2; }

.DateRangePicker_closeButton:focus,
.DateRangePicker_closeButton:hover {
  color: #b0b3b4;
  text-decoration: none; }

.DateRangePicker_closeButton_svg {
  height: 15px;
  width: 15px;
  fill: #cacccd; }

.DayPicker {
  background: white;
  position: relative;
  text-align: left; }

.DayPicker__horizontal {
  background: white;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05), 0 0 0 1px rgba(0, 0, 0, 0.07);
  border-radius: 3px; }

.DayPicker__verticalScrollable {
  height: 100%; }

.DayPicker__hidden {
  visibility: hidden; }

.DayPicker_portal__horizontal {
  box-shadow: none;
  position: absolute;
  left: 50%;
  top: 50%; }

.DayPicker_portal__vertical {
  position: static;
  position: initial; }

.DayPicker_focusRegion {
  outline: 0; }

.DayPicker_weekHeaders {
  position: relative; }

.DayPicker_weekHeaders__horizontal {
  margin-left: 9px; }

.DayPicker_weekHeader {
  color: #757575;
  position: absolute;
  top: 62px;
  z-index: 2;
  padding: 0 13px;
  text-align: left; }

.DayPicker_weekHeader__vertical {
  left: 50%; }

.DayPicker_weekHeader__verticalScrollable {
  top: 0;
  display: table-row;
  border-bottom: 1px solid #dbdbdb;
  background: white;
  margin-left: 0;
  left: 0;
  width: 100%;
  text-align: center; }

.DayPicker_weekHeader_ul {
  list-style: none;
  margin: 1px 0;
  padding-left: 0;
  padding-right: 0; }

.DayPicker_weekHeader_li {
  display: inline-block;
  text-align: center; }

.DayPicker_transitionContainer {
  position: relative;
  overflow: hidden;
  border-radius: 3px; }

.DayPicker_transitionContainer__horizontal {
  transition: height .2s ease-in-out; }

.DayPicker_transitionContainer__vertical {
  width: 100%; }

.DayPicker_transitionContainer__verticalScrollable {
  padding-top: 20px;
  height: 100%;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  overflow-y: scroll; }

.DayPickerKeyboardShortcuts_buttonReset {
  background: 0 0;
  border: 0;
  border-radius: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  cursor: pointer; }

.DayPickerKeyboardShortcuts_buttonReset:active {
  outline: 0; }

.DayPickerKeyboardShortcuts_show {
  width: 22px;
  position: absolute;
  z-index: 2; }

.DayPickerKeyboardShortcuts_show__bottomRight {
  border-top: 26px solid transparent;
  border-right: 33px solid black;
  bottom: 0;
  right: 0; }

.DayPickerKeyboardShortcuts_show__bottomRight:hover {
  border-right: 33px solid black; }

.DayPickerKeyboardShortcuts_show__topRight {
  border-bottom: 26px solid transparent;
  border-right: 33px solid black;
  top: 0;
  right: 0; }

.DayPickerKeyboardShortcuts_show__topRight:hover {
  border-right: 33px solid black; }

.DayPickerKeyboardShortcuts_show__topLeft {
  border-bottom: 26px solid transparent;
  border-left: 33px solid black;
  top: 0;
  left: 0; }

.DayPickerKeyboardShortcuts_show__topLeft:hover {
  border-left: 33px solid black; }

.DayPickerKeyboardShortcuts_showSpan {
  color: white;
  position: absolute; }

.DayPickerKeyboardShortcuts_showSpan__bottomRight {
  bottom: 0;
  right: -28px; }

.DayPickerKeyboardShortcuts_showSpan__topRight {
  top: 1px;
  right: -28px; }

.DayPickerKeyboardShortcuts_showSpan__topLeft {
  top: 1px;
  left: -28px; }

.DayPickerKeyboardShortcuts_panel {
  overflow: auto;
  background: white;
  border: 1px solid #dbdbdb;
  border-radius: 2px;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: 2;
  padding: 22px;
  margin: 33px; }

.DayPickerKeyboardShortcuts_title {
  font-size: 16px;
  font-weight: 700;
  margin: 0; }

.DayPickerKeyboardShortcuts_list {
  list-style: none;
  padding: 0; }

.DayPickerKeyboardShortcuts_close {
  position: absolute;
  right: 22px;
  top: 22px;
  z-index: 2; }

.DayPickerKeyboardShortcuts_close:active {
  outline: 0; }

.DayPickerKeyboardShortcuts_closeSvg {
  height: 15px;
  width: 15px;
  fill: #cacccd; }

.DayPickerKeyboardShortcuts_closeSvg:focus,
.DayPickerKeyboardShortcuts_closeSvg:hover {
  fill: #82888a; }

.KeyboardShortcutRow {
  list-style: none;
  margin: 6px 0; }

.KeyboardShortcutRow__block {
  margin-bottom: 16px; }

.KeyboardShortcutRow_keyContainer {
  display: inline-block;
  white-space: nowrap;
  text-align: right;
  margin-right: 6px; }

.KeyboardShortcutRow_keyContainer__block {
  width: auto;
  text-align: left;
  display: inline; }

.KeyboardShortcutRow_key {
  font-family: monospace;
  font-size: 12px;
  text-transform: uppercase;
  background: #f2f2f2;
  padding: 2px 6px; }

.KeyboardShortcutRow_action {
  display: inline;
  word-break: break-word;
  margin-left: 8px; }

.DayPickerNavigation_container {
  position: relative;
  z-index: 2; }

.DayPickerNavigation_container__vertical {
  background: white;
  box-shadow: 0 0 5px 2px rgba(0, 0, 0, 0.1);
  position: absolute;
  bottom: 0;
  left: 0;
  height: 52px;
  width: 100%; }

.DayPickerNavigation_container__verticalScrollable {
  position: relative; }

.DayPickerNavigation_button {
  cursor: pointer;
  line-height: .78;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.DayPickerNavigation_button__default {
  border: 1px solid #e4e7e7;
  background-color: white;
  color: #757575; }

.DayPickerNavigation_button__default:focus,
.DayPickerNavigation_button__default:hover {
  border: 1px solid #c4c4c4; }

.DayPickerNavigation_button__default:active {
  background: #f2f2f2; }

.DayPickerNavigation_button__horizontal {
  border-radius: 3px;
  padding: 6px 9px;
  top: 18px;
  position: absolute; }

.DayPickerNavigation_leftButton__horizontal {
  left: 22px; }

.DayPickerNavigation_rightButton__horizontal {
  right: 22px; }

.DayPickerNavigation_button__vertical {
  display: inline-block;
  position: relative;
  height: 100%;
  width: 50%; }

.DayPickerNavigation_button__vertical__default {
  padding: 5px; }

.DayPickerNavigation_nextButton__vertical__default {
  border-left: 0; }

.DayPickerNavigation_nextButton__verticalScrollable {
  width: 100%; }

.DayPickerNavigation_svg__horizontal {
  height: 19px;
  width: 19px;
  fill: #82888a; }

.DayPickerNavigation_svg__vertical {
  height: 42px;
  width: 42px;
  fill: #565a5c; }

.CalendarMonthGrid {
  background: white;
  text-align: left;
  z-index: 0; }

.CalendarMonthGrid__animating {
  z-index: 1; }

.CalendarMonthGrid__horizontal {
  position: absolute;
  left: 9px; }

.CalendarMonthGrid__vertical {
  margin: 0 auto; }

.CalendarMonthGrid__vertical_scrollable {
  margin: 0 auto;
  overflow-y: scroll; }

.CalendarMonthGrid_month__horizontal {
  display: inline-block;
  vertical-align: top;
  min-height: 100%; }

.CalendarMonthGrid_month__hideForAnimation {
  position: absolute;
  z-index: -1;
  opacity: 0;
  pointer-events: none; }

.CalendarMonth {
  background: white;
  text-align: center;
  padding: 0 13px;
  vertical-align: top;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.CalendarMonth_table {
  border-collapse: collapse;
  border-spacing: 0; }

.CalendarMonth_table td:not(CalendarDay_container) {
  border: none; }

.CalendarMonth_caption {
  color: #565a5c;
  font-size: 18px;
  text-align: center;
  padding-top: 22px;
  padding-bottom: 37px;
  caption-side: top;
  caption-side: initial; }

.CalendarMonth_caption__verticalScrollable {
  padding-top: 12px;
  padding-bottom: 7px; }

.CalendarDay_container {
  border: 1px solid #e4e7e7;
  padding: 0;
  box-sizing: border-box;
  color: #565a5c;
  background: white; }

.CalendarDay_container:hover {
  background: #e4e7e7;
  border: 1px double #e4e7e7;
  color: inherit; }

.CalendarDay_button {
  position: relative;
  height: 100%;
  width: 100%;
  text-align: center;
  background: 0 0;
  border: 0;
  margin: 0;
  padding: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  box-sizing: border-box;
  cursor: pointer; }

.CalendarDay_button:active {
  outline: 0; }

.CalendarDay_button__default {
  cursor: default; }

.CalendarDay__outside {
  border: 0;
  background: white;
  color: #565a5c; }

.CalendarDay__blocked_minimum_nights {
  background: white;
  border: 1px solid #eceeee;
  color: #cacccd; }

.CalendarDay__blocked_minimum_nights:active,
.CalendarDay__blocked_minimum_nights:hover {
  background: white;
  color: #cacccd; }

.CalendarDay__highlighted_calendar {
  background: #ffe8bc;
  color: #565a5c; }

.CalendarDay__highlighted_calendar:active,
.CalendarDay__highlighted_calendar:hover {
  background: #ffce71;
  color: #565a5c; }

.CalendarDay__selected_span {
  background: #333333;
  border: 1px solid #333333;
  color: white; }

.CalendarDay__selected_span:active,
.CalendarDay__selected_span:hover {
  background: #4d4d4d;
  border: 1px solid #333333;
  color: white; }

.CalendarDay__last_in_range {
  border-right: black; }

.CalendarDay__selected,
.CalendarDay__selected:active,
.CalendarDay__selected:hover {
  background: black;
  border: 1px solid black;
  color: white; }

.CalendarDay__hovered_span,
.CalendarDay__hovered_span:hover {
  background: #4d4d4d;
  border: 1px solid #4d4d4d;
  color: #000; }

.CalendarDay__hovered_span:active {
  background: #4d4d4d;
  border: 1px solid #4d4d4d;
  color: #000; }

.CalendarDay__blocked_calendar,
.CalendarDay__blocked_calendar:active,
.CalendarDay__blocked_calendar:hover {
  background: #cacccd;
  border: 1px solid #cacccd;
  color: #82888a; }

.CalendarDay__before_today,
.CalendarDay__blocked_out_of_range,
.CalendarDay__blocked_out_of_range:active,
.CalendarDay__blocked_out_of_range:hover {
  background: white;
  color: #cacccd; }

.CalendarDay__before_today:hover {
  background: #e4e7e7;
  color: inherit; }

.DateRangePickerInput {
  background-color: white;
  border: 1px solid #cacccd;
  display: flex; }

.DateRangePickerInput__disabled {
  background: #f2f2f2; }

.DateRangePickerInput__rtl {
  direction: rtl; }

.DateRangePickerInput_arrow {
  display: inline-block;
  vertical-align: middle; }

.DateRangePickerInput_arrow_svg {
  vertical-align: middle;
  fill: #565a5c;
  height: 24px;
  width: 24px; }

.DateRangePickerInput_clearDates {
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  cursor: pointer;
  display: inline-block;
  vertical-align: middle;
  padding: 10px;
  margin: 0;
  width: 12px;
  height: 12px;
  position: relative; }

.DateRangePickerInput_clearDates:focus,
.DateRangePickerInput_clearDates:hover {
  background: #dbdbdb;
  border-radius: 50%; }

.DateRangePickerInput_clearDates__hide {
  visibility: hidden; }

.DateRangePickerInput_clearDates_svg {
  fill: #82888a;
  height: 12px;
  width: 12px;
  vertical-align: middle;
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translateX(-50%) translateY(-50%);
          transform: translateX(-50%) translateY(-50%); }

.DateRangePickerInput_calendarIcon {
  background: 0 0;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  cursor: pointer;
  display: inline-block;
  vertical-align: middle;
  padding: 10px;
  margin: 0 5px 0 10px; }

.DateRangePickerInput_calendarIcon_svg {
  fill: #82888a;
  height: 15px;
  width: 14px;
  vertical-align: middle; }

.DateInput {
  line-height: 24px;
  color: #757575;
  margin: 0;
  padding: 0;
  background: white;
  position: relative;
  display: inline-block;
  width: 100%;
  vertical-align: middle; }

.DateInput__withCaret:after,
.DateInput__withCaret:before {
  content: "";
  display: inline-block;
  position: absolute;
  bottom: auto;
  border: 10px solid transparent;
  left: 22px;
  z-index: 2; }

.DateInput__openUp:before {
  border-bottom: 0;
  top: -24px;
  border-top-color: rgba(0, 0, 0, 0.1); }

.DateInput__openUp:after {
  border-bottom: 0;
  top: -25px;
  border-top-color: white; }

.DateInput__openDown:before {
  border-top: 0;
  top: 30px;
  border-bottom-color: rgba(0, 0, 0, 0.1); }

.DateInput__openDown:after {
  border-top: 0;
  top: 31px;
  border-bottom-color: white; }

.DateInput_input {
  border: 0;
  border-top: 0;
  border-right: 0;
  border-left: 0; }

.DateInput_input__readOnly {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.DateInput_input__focused {
  outline: 0;
  background: white;
  border: 0;
  border-top: 0;
  border-right: 0;
  border-left: 0; }

.DateInput_input__disabled {
  background: white; }

.DateInput_screenReaderMessage {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

.DateInput_fang {
  height: 20px;
  width: 20px;
  position: absolute;
  display: block;
  left: 22px;
  z-index: 2; }

.DateInput_fangShape {
  fill: white; }

.DateInput_fangStroke {
  stroke: #dbdbdb;
  fill: transparent; }

.mobile-side-menu__overlay {
  position: fixed;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(78, 73, 73, 0.8);
  top: 100%;
  z-index: 99999;
  transition: top 0.25s ease-in-out; }

.mobile-side-menu__content {
  position: fixed;
  z-index: 999999;
  top: 0;
  left: -100%;
  width: 70%;
  height: 100%;
  display: flex;
  flex-direction: column;
  transition: left 0.25s ease-in-out;
  background-color: white; }

.mobile-side-menu__content__footer {
  margin-top: auto; }

.mobile-side-menu--active .mobile-side-menu__content {
  left: 0; }

.mobile-side-menu--active .mobile-side-menu__overlay {
  top: 0; }

/*------------------------------------*\
    $MODAL
\*------------------------------------*/
.modal, .modal--large, .modal--small {
  transition: opacity 350ms ease-in-out, top 0ms ease-in-out;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(128, 128, 128, 0.1);
  opacity: 1;
  z-index: 99999;
  overflow-y: scroll; }
  .is-closed.modal, .is-closed.modal--large, .is-closed.modal--small {
    transition: opacity 350ms ease-in-out, top 0ms ease-in-out 350ms;
    top: -100%;
    left: 0;
    opacity: 0; }

.modal--large > .modal__inner {
  min-width: 75vw;
  min-height: 75vh; }

.modal--small > .modal__inner {
  min-width: 50vw;
  min-height: 50vh; }

.modal__inner {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  -webkit-transform: translateX(-50%) translateY(-50%);
          transform: translateX(-50%) translateY(-50%);
  min-height: 45vh;
  min-width: 35vw; }

.modal__close {
  text-align: right;
  right: 0;
  top: 0; }

.modal__container {
  position: relative; }

.modal__container__footer {
  text-align: right; }

@charset "UTF-8";
/*------------------------------------*\
  $FRAMEWORK
\*------------------------------------*/
/*------------------------------------*\
  $BASE
\*------------------------------------*/
/**
 * Base variables. These are included first as they provide a basis for calculations
 * throughout the framework.
 */
/**
  * Base font-family.
  */
/**
  * Default colour for objects’ borders etc.
  */
/**
 * inuit.css will work these next ones out for use within the framework.
 *
 * Assign our `$base-line-height` to a new spacing var for more transparency.
 */
/**
 * Tell inuit.css when breakpoints start.
 */
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $COLLAPSED ANCHOR
\*------------------------------------*/
/**
 * Media query mixin.
 *
 * It’s not great practice to define solid breakpoints up-front, preferring to
 * modify your design when it needs it, rather than assuming you’ll want a
 * change at ‘mobile’. However, as inuit.css is required to take a hands off
 * approach to design decisions, this is the closest we can get to baked-in
 * responsiveness. It’s flexible enough to allow you to set your own breakpoints
 * but solid enough to be frameworkified.
 *
 * We define some broad breakpoints in our vars file that are picked up here
 * for use in a simple media query mixin. Our options are:
 *
 * palm
 * lap
 * lap-and-up
 * portable
 * desk
 * desk-wide
 *
 * Not using a media query will, naturally, serve styles to all devices.
 *
 * `@include media-query(palm){ [styles here] }`
 *
 * We work out your end points for you:
 */
/*------------------------------------*\
    $LAYOUT
\*------------------------------------*/
/*------------------------------------*\
    $ISLAND MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN AND PADDING
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN
\*------------------------------------*/
/*------------------------------------*\
    $PADDING
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN
\*------------------------------------*/
/*------------------------------------*\
    $PADDING
\*------------------------------------*/
/*------------------------------------*\
    $WRAP MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $LINKS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $COLLAPSED ANCHOR
\*------------------------------------*/
/*------------------------------------*\
    $BASE
\*------------------------------------*/
/*------------------------------------*\
    $LISTS
\*------------------------------------*/
.paginator {
  list-style-type: none;
  padding: 0;
  margin: 0; }

/*------------------------------------*\
    $PAGINATOR
\*------------------------------------*/
.paginator {
  display: flex; }

.select-rows:hover .select-rows--action .svg {
  color: black; }

.select-rows .select-rows--action {
  flex: 0 1; }
  .select-rows .select-rows--action .svg {
    padding: 0; }

.select-rows .select-rows--value {
  flex: 1 1; }

.select-rows .select-rows--placeholder {
  color: grey;
  flex: 1 1; }

@charset "UTF-8";
/*------------------------------------*\
  $FRAMEWORK
\*------------------------------------*/
/*------------------------------------*\
  $BASE
\*------------------------------------*/
/**
 * Base variables. These are included first as they provide a basis for calculations
 * throughout the framework.
 */
/**
  * Base font-family.
  */
/**
  * Default colour for objects’ borders etc.
  */
/**
 * inuit.css will work these next ones out for use within the framework.
 *
 * Assign our `$base-line-height` to a new spacing var for more transparency.
 */
/**
 * Tell inuit.css when breakpoints start.
 */
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $COLLAPSED ANCHOR
\*------------------------------------*/
/**
 * Media query mixin.
 *
 * It’s not great practice to define solid breakpoints up-front, preferring to
 * modify your design when it needs it, rather than assuming you’ll want a
 * change at ‘mobile’. However, as inuit.css is required to take a hands off
 * approach to design decisions, this is the closest we can get to baked-in
 * responsiveness. It’s flexible enough to allow you to set your own breakpoints
 * but solid enough to be frameworkified.
 *
 * We define some broad breakpoints in our vars file that are picked up here
 * for use in a simple media query mixin. Our options are:
 *
 * palm
 * lap
 * lap-and-up
 * portable
 * desk
 * desk-wide
 *
 * Not using a media query will, naturally, serve styles to all devices.
 *
 * `@include media-query(palm){ [styles here] }`
 *
 * We work out your end points for you:
 */
/*------------------------------------*\
    $LAYOUT
\*------------------------------------*/
/*------------------------------------*\
    $ISLAND MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN AND PADDING
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN
\*------------------------------------*/
/*------------------------------------*\
    $PADDING
\*------------------------------------*/
/*------------------------------------*\
    $MARGIN
\*------------------------------------*/
/*------------------------------------*\
    $PADDING
\*------------------------------------*/
/*------------------------------------*\
    $WRAP MIXINS
\*------------------------------------*/
/*------------------------------------*\
    $LINKS
\*------------------------------------*/
/*------------------------------------*\
    $MENUS
\*------------------------------------*/
/*------------------------------------*\
    $COLLAPSED ANCHOR
\*------------------------------------*/
/*------------------------------------*\
    $BASE
\*------------------------------------*/
/*------------------------------------*\
    $LISTS
\*------------------------------------*/
.simple-popup {
  height: 100%;
  background-color: white;
  padding: 0;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  -webkit-transform: translateX(-50%) translateY(-50%);
          transform: translateX(-50%) translateY(-50%);
  min-height: 15vh;
  min-width: 35vw;
  border-radius: 10px; }

.simple-popup__header {
  padding-top: px-to-rem(24px);
  padding-right: px-to-rem(24px);
  padding-left: px-to-rem(24px);
  padding-bottom: px-to-rem(18px);
  text-align: center;
  font-weight: bold; }

.simple-popup__body {
  padding-right: px-to-rem(24px);
  padding-left: px-to-rem(24px);
  white-space: pre-line;
  width: 100%;
  word-break: break-word; }

.simple-popup__footer {
  text-align: center;
  display: flex;
  flex-direction: row; }

.simple-popup__container__footer__item {
  flex: 1 1;
  min-height: 40px; }

.override .loader__ellipsis__dot {
  background-color: #555; }

/*------------------------------------*\
    $SWITCH VIEW
\*------------------------------------*/
.switch-view {
  display: block; }

.switch-view__item {
  width: 100%;
  text-align: center; }
  .switch-view__item button {
    min-width: 10em;
    border-radius: 0px;
    border-width: 1px; }
    .switch-view__item button:last-child():not(:first-child) {
      border-left: 0px; }

/*------------------------------------*\
    $HOVER TOOLTIP
\*------------------------------------*/
.hover-tooltip-container {
  text-align: center; }

.hover-tooltip {
  position: relative; }
  .hover-tooltip:hover > .hover-tooltip__inner {
    transition: opacity 350ms ease-in-out;
    opacity: 0.8;
    height: 30px;
    width: 140px;
    overflow: visible; }
    .hover-tooltip:hover > .hover-tooltip__inner:before {
      opacity: 1; }

.hover-tooltip svg {
  pointer-events: none; }

.hover-tooltip__inner {
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
  opacity: 0;
  transition: opacity 350ms ease-in-out, height 0ms ease-in 350ms, width 0ms ease-in 350ms overflow 0ms ease-in 350ms;
  position: absolute;
  color: #fff;
  background-color: black;
  height: 0;
  text-align: center;
  border-radius: 6px;
  top: 110%;
  left: 50%;
  z-index: 999;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  width: 0px;
  overflow: hidden; }
  .hover-tooltip__inner:before {
    transition: opacity 350ms ease-in-out;
    content: "";
    position: absolute;
    bottom: 100%;
    left: 50%;
    -webkit-transform: translateX(-55%);
            transform: translateX(-55%);
    width: 0;
    height: 0;
    border-bottom: 8px solid black;
    border-right: 8px solid transparent;
    border-left: 8px solid transparent;
    overflow: hidden;
    opacity: 0; }

.hover-tooltip__inner__text {
  display: block; }

.category-list .category-list__item__body {
  transition: opacity 350ms ease-in-out, max-height 350ms ease-in-out;
  border-width: 0;
  max-height: 0;
  opacity: 0;
  overflow: hidden;
  padding-bottom: 0;
  padding-top: 0; }
  .category-list .category-list__item__body.is-open {
    max-height: none;
    max-height: initial;
    opacity: 1;
    overflow: visible; }


/*# sourceMappingURL=main.css.map*/